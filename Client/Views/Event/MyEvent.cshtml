@using System.Globalization;
@model IEnumerable<Event>

@{
    ViewData["Title"] = "MyEvent";
    Layout = "_Layout";
    CultureInfo cultureId = new CultureInfo("id-ID");
}
@*
<h1>MyEvent</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>*@

<head>
    <style>
        img {
            width: 200px;
        }

        .align-items-center {
            background-color: #101130;
        }

        .table-hover tbody tr:hover {
            background-color: ghostwhite; /* Ganti dengan warna latar belakang yang Anda inginkan saat hover */
        }

    </style>
</head>

<section class="vh-100" style="background-color: #eee;">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-md-12 col-xl-12">

                <div class="card mt-50">
                    <div class="card-header p-3">
                        <h5 class="mb-0"><i class="fas fa-tasks me-2"></i>My Event</h5>
                    </div>
                    <div class="card-body" data-mdb-perfect-scrollbar="true" style="position: relative; height: 100%; width:100%; overflow-x:scroll">

                        <table class="table table-striped table-bordered mb-0 table-hover">
                            <thead class="text-center">
                                <tr>
                                    <th scope="col" class="">Guid</th>
                                    <th scope="col" class="">Event Name</th>
                                    <th scope="col" class="">Description</th>
                                    <th scope="col" class="">Poster</th>
                                    <th scope="col" class="">Detail</th>
                                    <th scope="col" class="">Actions</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {

                                    string startMonth = item.StartDate.ToString("MMMM", cultureId); // Get the month from StartDate
                                    string endMonth = item.EndDate.ToString("MMMM", cultureId); // Get the month from EndDate
                                    string startDay = item.StartDate.ToString("dd", cultureId); // Get the day from StartDate
                                    string endDay = item.EndDate.ToString("dd", cultureId); // Get the day from EndDate
                                    string startYear = item.StartDate.ToString("yyyy", cultureId); // Get the year from StartDate
                                    string endYear = item.EndDate.ToString("yyyy", cultureId); // Get the year from StartDate
                                    string startTime = item.StartDate.ToString("HH:mm", cultureId); // Get the start time from StartDate
                                    string endTime = item.EndDate.ToString("HH:mm", cultureId); // Get the start time from StartDate

                                    string startDayName = item.StartDate.ToString("ddd", cultureId); // Get the day name from StartDate
                                    string endDayName = item.EndDate.ToString("ddd", cultureId); // Get the day name from EndDate

                                    string formatmonth;
                                    if (item.StartDate.Month == item.EndDate.Month)
                                    {
                                        formatmonth = startMonth;
                                    }
                                    else
                                    {
                                        formatmonth = $"{startMonth} - {endMonth}";
                                    }

                                    string formatday;
                                    if (item.StartDate.Day == item.EndDate.Day)
                                    {
                                        formatday = startDay;
                                    }
                                    else
                                    {
                                        formatday = $"{startDay} - {endDay}";
                                    }

                                    string formatDayName;
                                    if (item.StartDate.Day == item.EndDate.Day)
                                    {
                                        formatDayName = startDayName;
                                    }
                                    else
                                    {
                                        formatDayName = $"{startDayName} - {endDayName}";
                                    }

                                    string startformat = $"{startDayName}, {startDay} {startMonth} {startYear} at {startTime}";
                                    string endformat = $"{endDayName}, {endDay} {endMonth} {endYear} at {endTime}";


                                    <tr class="fw-normal">
                                        <td class="align-middle">
                                            <span style="width:150px">@Html.DisplayFor(modelItem => item.Guid)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:150px">@Html.DisplayFor(modelItem => item.Name)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:500px;">@Html.DisplayFor(modelItem => item.Description)</span>
                                        </td>

                                        <td class="align-middle">
                                            <img class="" src="data:image/jpeg;base64,@Convert.ToBase64String(item.Poster)" alt="Poster" />
                                        </td>

                                        <td class="align-middle">
                                            <div style="width:300px;">
                                                <p>Status : <span style="font-weight:bold;"> @Html.DisplayFor(modelItem => item.Status) </span> </p>
                                                <p>Quota : <span style="font-weight:bold;"> @Html.DisplayFor(modelItem => item.Quota) </span> </p>
                                                <p>Price : <span style="font-weight:bold;"> @Html.DisplayFor(modelItem => item.Price) </span> </p>
                                                <p>Location : <span style="font-weight:bold;"> @Html.DisplayFor(modelItem => item.Location) </span> </p>
                                                <p>Start Date : <span style="font-weight:bold;"> @startformat </span> </p>
                                                <p>End Date : <span style="font-weight:bold;"> @endformat </span> </p>
                                                <p>Organizer by : <span style="font-weight:bold;"> @Html.DisplayFor(modelItem => item.Organizer) </span> </p>
                                                <p>
                                                    Validation Admin : <span class="checkbox-format">
                                                        @if (item.IsValid)
                                                        {
                                                            <i class="checkbox-icon fas fa-check-circle" style="color: green"></i>
                                                        }
                                                        else
                                                        {
                                                            <i class="checkbox-icon fas fa-hourglass-half" style="color:darkorange"> </i> <span> Waiting for validation</span>
                                                        }
                                                    </span>
                                                </p>
                                            </div>
                                        </td>

                                        <td class="align-middle" style="text-align:left">
                                            <div style="width:150px; margin-bottom:10px;">
                                                @if (item.IsValid == false)
                                                {
                                                    <i class="fas fa-cog fa-spin text-primary" title="Edit Event"> </i> @Html.ActionLink("Edit Event", "EditEM", new { guid = item.Guid }, new { })                                                    
                                                }
                                            </div>
                                            <div style="width:200px; margin-bottom:10px;">
                                                <i class="fas fa-list-alt text-primary" title="Show Waiting List"> </i> @Html.ActionLink("Show Waiting List", "WaitingList", new { guid = item.Guid }, new { })
                                            </div>
                                            <div style="width:200px; margin-bottom:10px;">
                                                <i class="fas fa-users text-info text-primary" title="Show Participant"> </i> @Html.ActionLink("Show Participant", "ListParticipant", new { guid = item.Guid }, new { })
                                            </div>
                                            <div style="width:200px; margin-bottom:10px;">
                                                <i class="fas fa-chart-bar text-success" title="Show Chart"></i> @Html.ActionLink("Show Chart", "ChartPayment", "Payment", new { eventGuid = item.Guid }, new { })
                                            </div>
                                        </td>
                                    </tr>

                                }
                            </tbody>
                        </table>

                    </div>
                    <div class="card-footer text-end p-3">
                        <a class="btn btn-primary" href="/Event/Index">Back</a>
                        <a class="btn btn-primary" href="/Event/Create">Add Event</a>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>
@*<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Guid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Poster)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quota)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsPaid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Organizer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsValid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Guid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <img class="d-block img-fluid" src="data:image/jpeg;base64,@Convert.ToBase64String(item.Poster)" alt="Poster" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quota)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsPaid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Organizer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsValid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedBy)
                </td>
                <td>
                    @Html.ActionLink("Show Participant", "ListParticipant", new { item.Guid }) |

                    @Html.ActionLink("Show Waiting List", "WaitingList", new { item.Guid })
                </td>
            </tr>
        }
    </tbody>
</table>*@
