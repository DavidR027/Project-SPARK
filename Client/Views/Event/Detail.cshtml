@using System.Security.Claims;
@using System.Globalization;
@model Client.Models.Event

@{
    ViewData["Title"] = "Detail";
    string customClaimType = "GuidValue";
    Claim guidClaim = User.Claims.FirstOrDefault(c => c.Type == customClaimType);
    Guid? guidValue = null;

    if (guidClaim != null && Guid.TryParse(guidClaim.Value, out Guid parsedGuid))
    {
        guidValue = parsedGuid;
    }

    CultureInfo cultureId = new CultureInfo("id-ID");
    string startDate = Model.StartDate.ToString("dddd, d MMMM yyyy", cultureId);
    string endDate = Model.EndDate.ToString("dddd, d MMMM yyyy", cultureId);
    string startTime = Model.StartDate.ToString("t");
    string endTime = Model.EndDate.ToString("t");

    string formattedDate;
    if (Model.StartDate.Date == Model.EndDate.Date)
    {
        formattedDate = $"{startDate} | {startTime} - {endTime}";
    }
    else
    {
        formattedDate = $"{startDate} - {endDate} | {startTime} - {endTime}";
    }
}



<div class="breadcrumbs">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-8 offset-lg-2 col-md-12 col-12">
                <div class="breadcrumbs-content">
                    <h1 class="page-title">Detail</h1>
                    <ul class="breadcrumb-nav">
                        <li><a href="index.html">Home</a></li>
                        <li>Detail Event</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="wow fadeInUp" data-wow-delay=".2s">
    <div class="single-featuer">
        <img class="shape" src="~/images/features/shape.svg" alt="#">
        <img class="shape2" src="~/images/features/shape2.svg" alt="#">
        <div class="contact-us section" id="contact">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="contact-us-content">
                            <div class="row">
                                <div class="col-lg-3">
                                    <div id="map">
                                        <img class="d-block img-fluid mb-3" style="height:300px;" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Poster)" alt="Poster"
                                             width="100%" height="670px" frameborder="0" style="border:0; border-radius: 23px;"
                                             allowfullscreen=""></image>
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <span class="serial"><i class="fas fa-globe"> @Html.DisplayFor(modelItem => Model.Status)</i></span>

                                    <div class="">
                                        <h3>@Html.DisplayFor(modelItem => Model.Name)</h3>
                                        <p>
                                            @Html.DisplayFor(modelItem => Model.Description)
                                        </p>
                                        <div>
                                            <h8>
                                                <i class="fas fa-map-marker-alt"></i> @Html.DisplayFor(modelItem => Model.Location)
                                            </h8>
                                        </div>

                                        <div>
                                            <h8>
                                                <i class="fas fa-users"></i> <h8 class="quotaRemaining"></h8>
                                            </h8>
                                        </div>

                                        <div>
                                            <h8>
                                                <i class="fas fa-comment-dollar"></i> @Html.DisplayFor(modelItem => Model.Price)
                                            </h8>
                                        </div>

                                        <div>
                                            <h8>
                                                <i class="fas fa-clock"></i> @formattedDate
                                            </h8>
                                        </div>

                                        <div>
                                            @if(guidValue != null)
                                            {
                                                <a href="/Payment/Create?eventGuid=@Model.Guid" class="btn btn-primary"><i class="fas fa-plus"></i> Join Event</a>
                                            }
                                            else
                                            {
                                                <a href="/Account/Logins" class="btn btn-primary"><i class="fas fa-plus"></i> Join Event</a>
                                            }
                                            
                                            @if (User.IsInRole("EventMaker") && guidValue == Model.CreatedBy)
                                            {
                                                <a href="@Url.Action("ListParticipant", new { id = Model.Guid })" class="btn btn-secondary"><i class="fas fa-users"></i> Show Participants</a>
                                                <a href="@Url.Action("WaitingList", new { id = Model.Guid })" class="btn btn-secondary"><i class="fas fa-clock"></i> Show Waiting List</a>
                                            }

                                            @if (User.IsInRole("Admin"))
                                            {
                                                <a href="@Url.Action("ListParticipant", new { id = Model.Guid })" class="btn btn-secondary"><i class="fas fa-users"></i> Show Participants</a>
                                            }


                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<a hidden id="userGuid" data-value=@guidValue name="userGuid"></a>
<script>
    const eventGuid = '@Model.Guid';
    const apiUrl = 'https://localhost:7042/api/Event/GetParticipantListByGuid?guid=' + eventGuid;
    const apiUrl2 = 'https://localhost:7042/api/Event/GetWaitingListByGuid?guid=' + eventGuid;
    const guidElement = document.getElementById('userGuid');
    const userGuid = guidElement.getAttribute('data-value');

    $.ajax({
        url: apiUrl,
        dataType: 'json',
        success: function (response) {
            const participantList = response.data;
            const count = participantList.length;
            const userGuidExists = participantList.some(participant => participant.userGuid === userGuid);

            const joinEventButton = document.querySelector('.btn.btn-primary');
            if (userGuidExists) {
                joinEventButton.textContent = 'You Have Already Joined';
                joinEventButton.removeAttribute('href'); // Remove the href attribute to prevent navigation
                joinEventButton.onclick = function (event) {
                    event.preventDefault(); // Prevent the default click behavior
                };
            }

            const quota = @Model.Quota;

            const remainingQuota = quota - count;
            const quotaElement = document.querySelector('.quotaRemaining');
            quotaElement.textContent = remainingQuota.toString();
        },
        error: function (error) {
            console.error('Error retrieving participant list:', error);
        }
    });

    $.ajax({
        url: apiUrl2,
        dataType: 'json',
        success: function (response) {
            const participantList = response.data;
            const count = participantList.length;
            const userGuidExists = participantList.some(participant => participant.userGuid === userGuid);

            const joinEventButton = document.querySelector('.btn.btn-primary');
            if (userGuidExists) {
                joinEventButton.textContent = 'Waiting For Payment Validation';
                joinEventButton.removeAttribute('href'); // Remove the href attribute to prevent navigation
                joinEventButton.onclick = function (event) {
                    event.preventDefault(); // Prevent the default click behavior
                };
            }
        },
        error: function (error) {
            console.error('Error retrieving participant list:', error);
        }
    });
</script>