@model Client.Models.Event

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Event</h4>
<hr />
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Poster" class="control-label"></label>
                <input type="hidden" asp-for="Poster" class="form-control" />
                <input type="file" class="form-control" onchange="validateAndEncodeFile(this)" />
                <span asp-validation-for="Poster" class="text-danger"></span>
                <input type="hidden" id="encodedFile" name="encodedFile" />
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <div class="form-check">
                    <input type="radio" id="onlineRadio" name="Status" value="Online" class="form-check-input" />
                    <label for="onlineRadio" class="form-check-label">Online</label>
                </div>
                <div class="form-check">
                    <input type="radio" id="offlineRadio" name="Status" value="Offline" class="form-check-input" />
                    <label for="offlineRadio" class="form-check-label">Offline</label>
                </div>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quota" class="control-label"></label>
                <input asp-for="Quota" class="form-control" />
                <span asp-validation-for="Quota" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input id="isPaidCheckbox" class="form-check-input" type="checkbox" asp-for="IsPaid" value="true" />
                    @Html.DisplayNameFor(model => model.IsPaid)
                </label>
                <input type="hidden" name="IsPaid" value="false" />
            </div>

            <div class="form-group" id="priceContainer">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" value="Free" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Location" class="control-label"></label>
                <input asp-for="Location" class="form-control" />
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                <input asp-for="StartDate" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDate" class="control-label"></label>
                <input asp-for="EndDate" class="form-control" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Organizer" class="control-label"></label>
                <input asp-for="Organizer" class="form-control" />
                <span asp-validation-for="Organizer" class="text-danger"></span>
            </div>
            <div class="form-group form-check" hidden>
                <label class="form-check-label">
                    <input class="form-check-input" type="checkbox" asp-for="IsValid" value="false" /> 
                    @Html.DisplayNameFor(model => model.IsValid)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<script>
    function validateAndEncodeFile(input) {
        const file = input.files[0];
        const maxSizeInBytes = 5 * 1024 * 1024; // 5MB

        if (file && file.size > maxSizeInBytes) {
            // File size exceeds the limit, handle the error
            alert('File size exceeds the limit of 5MB.');
            input.value = ''; // Reset the input
            return;
        }

        encodeFile(input);
    }

    function encodeFile(input) {
        const file = input.files[0];
        const reader = new FileReader();

        reader.onloadend = function () {
            const bytes = new Uint8Array(reader.result);
            const encodedString = btoa(String.fromCharCode.apply(null, bytes));
            input.previousElementSibling.value = encodedString;
        }

        if (file) {
            reader.readAsArrayBuffer(file);
        }
    }


    $(document).ready(function () {
        // Hide the price container initially
        $('#priceContainer').hide();

        // Attach an event listener to the checkbox
        $('#isPaidCheckbox').change(function () {
            if ($(this).is(':checked')) {
                $('#priceContainer').show();  // Show the price container when checkbox is checked
            } else {
                $('#priceContainer').hide();  // Hide the price container when checkbox is unchecked
            }
        });
    });
</script>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
