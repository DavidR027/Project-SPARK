@using System.Globalization;
@model IEnumerable<Event>

@{
    ViewData["Title"] = "Index";
    Layout = "_Layout";
    CultureInfo cultureId = new CultureInfo("id-ID");
}
<head>
    <style>
        img {
            width:300px;
        }

        .align-items-center {
            align-items: center !important;
            background: #101130;

        }

        .table-hover tbody tr:hover {
            background-color: ghostwhite; /* Ganti dengan warna latar belakang yang Anda inginkan saat hover */
        }
    </style>
</head>

<section class="vh-100" style="background-color: #eee;">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-md-12 col-xl-12">

                <div class="card mt-50">
                    <div class="card-header p-3">
                        <h5 class="mb-0"><i class="fas fa-tasks me-2"></i>List Validation Event</h5>
                    </div>
                    <div class="card-body" data-mdb-perfect-scrollbar="true" style="position: relative; height: 100%; width:100%; overflow-x:scroll">

                        <table class="table table-striped table-bordered mb-0 table-hover">
                            <thead class="text-center">
                                <tr>
                                    <th scope="col" class="">Guid</th>
                                    <th scope="col" class="">Event Name</th>
                                    <th scope="col" class="">Description</th>
                                    <th scope="col" class="">Poster</th>
                                    <th scope="col" class="">Detail</th>
                                    <th scope="col" class="">Actions</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    @if (item.IsValid)
                                    {
                                        string startMonth = item.StartDate.ToString("MMMM", cultureId); // Get the month from StartDate
                                        string endMonth = item.EndDate.ToString("MMMM", cultureId); // Get the month from EndDate
                                        string startDay = item.StartDate.ToString("dd", cultureId); // Get the day from StartDate
                                        string endDay = item.EndDate.ToString("dd", cultureId); // Get the day from EndDate
                                        string startYear = item.StartDate.ToString("yyyy", cultureId); // Get the year from StartDate
                                        string endYear = item.EndDate.ToString("yyyy", cultureId); // Get the year from StartDate
                                        string startTime = item.StartDate.ToString("HH:mm", cultureId); // Get the start time from StartDate
                                        string endTime = item.EndDate.ToString("HH:mm", cultureId); // Get the start time from StartDate

                                        string startDayName = item.StartDate.ToString("ddd", cultureId); // Get the day name from StartDate
                                        string endDayName = item.EndDate.ToString("ddd", cultureId); // Get the day name from EndDate

                                        string formatmonth;
                                        if (item.StartDate.Month == item.EndDate.Month)
                                        {
                                            formatmonth = startMonth;
                                        }
                                        else
                                        {
                                            formatmonth = $"{startMonth} - {endMonth}";
                                        }

                                        string formatday;
                                        if (item.StartDate.Day == item.EndDate.Day)
                                        {
                                            formatday = startDay;
                                        }
                                        else
                                        {
                                            formatday = $"{startDay} - {endDay}";
                                        }

                                        string formatDayName;
                                        if (item.StartDate.Day == item.EndDate.Day)
                                        {
                                            formatDayName = startDayName;
                                        }
                                        else
                                        {
                                            formatDayName = $"{startDayName} - {endDayName}";
                                        }

                                        string startformat = $"{startDayName}, {startDay} {startMonth} {startYear} at {startTime}";
                                        string endformat = $"{endDayName}, {endDay} {endMonth} {endYear} at {endTime}";


                                        <tr class="fw-normal">
                                            <td class="align-middle">
                                                <span style="width:150px">@Html.DisplayFor(modelItem => item.Guid)</span>
                                            </td>

                                            <td class="align-middle">
                                                <span style="width:150px">@Html.DisplayFor(modelItem => item.Name)</span>
                                            </td>

                                            <td class="align-middle">
                                                <span style="width:600px;">@Html.DisplayFor(modelItem => item.Description)</span>
                                            </td>

                                            <td class="align-middle">
                                                <img class="" src="data:image/jpeg;base64,@Convert.ToBase64String(item.Poster)" alt="Poster" />
                                            </td>

                                            <td class="align-middle">
                                                <div style="width:320px;">
                                                    <p>Status : <span style="font-weight:bold;"> @Html.DisplayFor(modelItem => item.Status) </span> </p>
                                                    <p>Quota : <span style="font-weight:bold;"> @Html.DisplayFor(modelItem => item.Quota) </span> </p>
                                                    <p>Price : <span style="font-weight:bold;"> @Html.DisplayFor(modelItem => item.Price) </span> </p>
                                                    <p>Location : <span style="font-weight:bold;"> @Html.DisplayFor(modelItem => item.Location) </span> </p>
                                                    <p>Start Date : <span style="font-weight:bold;"> @startformat </span> </p>
                                                    <p>End Date : <span style="font-weight:bold;"> @endformat </span> </p>
                                                    <p>Created by : <span style="font-weight:bold;"> @Html.DisplayFor(modelItem => item.CreatedBy) </span> </p>
                                                    <p>Organizer by : <span style="font-weight:bold;"> @Html.DisplayFor(modelItem => item.Organizer) </span> </p>
                                                    <p>Validation Admin : @Html.DisplayFor(modelItem => item.IsValid) </p>
                                                </div>
                                            </td>

                                            <td class="align-middle" style="text-align:center">
                                                <div style="width:200px; margin-bottom:10px;">
                                                    <i class="fas fa-check-circle text-primary" title="Validate Event"> </i> @Html.ActionLink("Validate", "Edit", new { guid = item.Guid }, new { })
                                                </div>
                                                <div>
                                                    <i class="fas fa-trash-alt text-info text-primary" title="Delete"> </i> @Html.ActionLink("Delete", "Delete", new { guid = item.Guid }, new { })
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>

                    </div>
                    <div class="card-footer text-end p-3">
                        <a class="btn btn-primary" href="/Event/Index">Back</a>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>
@*
<section class="vh-100">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center">
            <div class="col-md-12 col-xl-12">

                <div class="card">
                    <div class="card-header p-3">
                        <h5 class="mb-0"><i class="fas fa-tasks me-2"></i>Task List</h5>
                    </div>
                    <div class="card-body" data-mdb-perfect-scrollbar="true" style="position: relative; height: 100%; width:100%; overflow-x:scroll">

                        <table class="table table-striped table-bordered mb-0 " style="width:100px">
                            <thead>
                                <tr>
                                    <th scope="col" class="">Guid</th>
                                    <th scope="col" class="">Event Name</th>
                                    <th scope="col" class="">Description</th>
                                    <th scope="col" class="">Poster</th>
                                    <th scope="col" class="">Status</th>
                                    <th scope="col" class="">Quota</th>
                                    <th scope="col" class="">IsPaid</th>
                                    <th scope="col" class="">Price</th>
                                    <th scope="col" class="">Location</th>
                                    <th scope="col" class="">Start Date</th>
                                    <th scope="col" class="">End Date</th>
                                    <th scope="col" class="">Organizer</th>
                                    <th scope="col" class="">Is Valid</th>
                                    <th scope="col" class="">Created By</th>
                                    <th scope="col" class="">Actions</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr class="fw-normal">
                                        <td class="align-middle">
                                            <span style="width:150px">@Html.DisplayFor(modelItem => item.Guid)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:150px">@Html.DisplayFor(modelItem => item.Name)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:200px">@Html.DisplayFor(modelItem => item.Description)</span>
                                        </td>

                                        <td class="align-middle">
                                            <img class="" src="data:image/jpeg;base64,@Convert.ToBase64String(item.Poster)" alt="Poster" />
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:50px">@Html.DisplayFor(modelItem => item.Status)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:50px">@Html.DisplayFor(modelItem => item.Quota)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:50px">@Html.DisplayFor(modelItem => item.IsPaid)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:50px">@Html.DisplayFor(modelItem => item.Price)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:150px">@Html.DisplayFor(modelItem => item.Location)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:200px">@Html.DisplayFor(modelItem => item.StartDate)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:200px">@Html.DisplayFor(modelItem => item.EndDate)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:100px">@Html.DisplayFor(modelItem => item.Organizer)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:50px">@Html.DisplayFor(modelItem => item.IsValid)</span>
                                        </td>

                                        <td class="align-middle">
                                            <span style="width:100px">@Html.DisplayFor(modelItem => item.CreatedBy)</span>
                                        </td>

                                        <td class="align-middle" style="text-align:center;">
                                            <div>
                                                <i class="fas fa-check-circle text-primary" title="Validate Event">
                                                    @Html.ActionLink("Validate", "Edit", new { guid = item.Guid }, new { })
                                                </i>
                                            </div>
                                            <div>
                                                <i class="fas fa-trash-alt text-info text-primary" title="Delete">
                                                    @Html.ActionLink("Delete", "Delete", new { guid = item.Guid }, new { })
                                                </i>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                    </div>
                    <div class="card-footer text-end p-3">
                        <a class="btn btn-primary" href="/Event/Index">Back</a>
                        <a class="btn btn-primary" href="/Event/Create">Add Event</a>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>*@

@*<div id="main-content" class="blog-page" style="margin:10px; overflow-x:auto;">
    <div class="container">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Guid)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Poster)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Quota)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsPaid)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Location)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EndDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Organizer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsValid)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Guid)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @if (item.Poster != null)
                            {
                                <img class="d-block img-fluid" src="data:image/jpeg;base64,@Convert.ToBase64String(item.Poster)" alt="Poster" />
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quota)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsPaid)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Location)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EndDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Organizer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsValid)
                        </td>
                        <td>
                            @Html.ActionLink("Validate", "Edit", new { @item.Guid }) |
                            @Html.ActionLink("Delete", "Delete", new { @item.Guid })
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>*@