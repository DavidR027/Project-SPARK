@using System.Security.Claims;
@model Client.Models.Payment


@{
    ViewData["Title"] = "Create";
    

    string customClaimType = "GuidValue";
    Claim guidClaim = User.Claims.FirstOrDefault(c => c.Type == customClaimType);
    Guid? guidValue = null;

    if (guidClaim != null && Guid.TryParse(guidClaim.Value, out Guid parsedGuid))
    {
        guidValue = parsedGuid;
    }
}

<head>
    <style>
        .divider:after,
        .divider:before {
            content: "";
            flex: 1;
            height: 1px;
            background: #eee;
        }

        .h-custom {
            height: calc(100% - 73px);
        }

        @@media (max-width: 450px) {
            .h-custom {
                height: 100%;
            }
        }
    </style>
</head>

<section class="vh-100">
    <div class="container-fluid h-custom">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-md-9 col-lg-6 col-xl-5">
                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.webp"
                     class="img-fluid" alt="Sample image">
            </div>
            <div class="col-md-8 col-lg-6 col-xl-4 offset-xl-1">
                <form asp-action="Create">
                    <div class="d-flex flex-row align-items-center justify-content-center justify-content-lg-start">
                        <p class="lead fw-normal mb-0 me-3">Payment</p>
                    </div>

                    <div class="divider d-flex align-items-center my-4">
                        <p class="text-center fw-bold mx-3 mb-0"></p>
                    </div>
                    
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group" hidden>
                            <label asp-for="UserGuid" class="control-label"></label>
                            <input asp-for="UserGuid" value=@guidValue class="form-control" />
                            <span asp-validation-for="UserGuid" class="text-danger"></span>
                        </div>
                        <div class="form-group" hidden>
                            <label asp-for="EventGuid" class="control-label">Event Guid</label>
                            <input asp-for="EventGuid" id="EventGuid" type="text" class="form-control" />
                            <span asp-validation-for="EventGuid" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Invoice" class="control-label"></label>
                            <input type="hidden" asp-for="Invoice" class="form-control" />
                            <input type="file" class="form-control" onchange="validateAndEncodeFile(this)" />
                            <span asp-validation-for="Invoice" class="text-danger"></span>
                            <input type="hidden" id="encodedFile" name="encodedFile" />
                        </div>
                        <div class="form-group form-check" hidden>
                            <label class="form-check-label">
                                <input class="form-check-input" type="checkbox" asp-for="IsValid" value="false" />
                                @Html.DisplayNameFor(model => model.IsValid)
                            </label>
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </form>
            </div>
        </div>
    </div>
</section>

<div class="row">
    <div class="col-md-4">
        
    </div>
</div>
<script>
    function validateAndEncodeFile(input) {
        const file = input.files[0];
        const maxSizeInBytes = 5 * 1024 * 1024; // 5MB

        if (file && file.size > maxSizeInBytes) {
            // File size exceeds the limit, handle the error
            alert('File size exceeds the limit of 5MB.');
            input.value = ''; // Reset the input
            return;
        }

        encodeFile(input);
    }

    function encodeFile(input) {
        const file = input.files[0];
        const reader = new FileReader();

        reader.onloadend = function () {
            const bytes = new Uint8Array(reader.result);
            const encodedString = btoa(String.fromCharCode.apply(null, bytes));
            input.previousElementSibling.value = encodedString;
        }

        if (file) {
            reader.readAsArrayBuffer(file);
        }
    }

    // Get the value of the "eventGuid" query parameter from the URL
    const urlParams = new URLSearchParams(window.location.search);
    const eventGuid = urlParams.get("eventGuid");

    // Set the retrieved value to the input field
    document.getElementById("EventGuid").value = eventGuid;
</script>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
